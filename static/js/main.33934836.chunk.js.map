{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","FILTER_ALPHABETICALLY","FILTER_LENGTH","App","_useState","useState","_useState2","_slicedToArray","chosenFilter","setChosenFilter","_useState3","_useState4","reverseBtn","setReverseBtn","sortedGoods","concat","sort","good1","good2","localeCompare","length","_jsxs","className","children","_jsx","type","cn","onClick","reverse","map","tempGood","good","ReactDOM","render","document","getElementById"],"mappings":"0OAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAwB,sBACxBC,EAAgB,iBAETC,EAAM,WACjB,IAAAC,EAAwCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA7CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCI,EAAoCL,oBAAS,GAAMM,EAAAJ,YAAAG,EAAA,GAA5CE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAC5BG,EAAW,GAAAC,OAAOf,GAEtB,GAAIQ,EACF,OAAQA,GACN,KAAKP,EACHa,EAAcA,EAAYE,MAAK,SAACC,EAAOC,GACrC,OAAIN,EACKM,EAAMC,cAAcF,GAGtBA,EAAME,cAAcD,EAC7B,IACA,MAEF,KAAKhB,EACHY,EAAcA,EAAYE,MAAK,SAACC,EAAOC,GACrC,OAAIN,EACEM,EAAME,SAAWH,EAAMG,OAClBF,EAAME,OAASH,EAAMG,OAGvBF,EAAMC,cAAcF,GAGtBA,EAAMG,OAASF,EAAME,MAC9B,IACA,MAEF,QACE,OAAO,EAIb,OACEC,eAAA,OAAKC,UAAU,kBAAiBC,SAAA,CAC9BF,eAAA,OAAKC,UAAU,UAASC,SAAA,CACtBC,cAAA,UACEC,KAAK,SACLH,UACEI,IAAG,SAAU,UACX,CAAE,WAAYlB,IAAiBP,IAEnC0B,QAAS,kBAAMlB,EAAgBR,EAAsB,EAACsB,SACvD,wBAIDC,cAAA,UACEC,KAAK,SACLH,UACEI,IAAG,SAAU,aACX,CAAE,WAAYlB,IAAiBN,IAEnCyB,QAAS,kBAAMlB,EAAgBP,EAAc,EAACqB,SAC/C,mBAIDC,cAAA,UACEC,KAAK,SACLH,UACEI,IAAG,SAAU,aACX,CAAE,YAAad,IAEnBe,QAAS,kBAAMd,GAAeD,EAAW,EAACW,SAC3C,aAICf,GAAgBI,IAEhBY,cAAA,UACEC,KAAK,SACLH,UAAU,4BACVK,QAAS,WACPlB,EAAgB,IAChBI,GAAc,EAChB,EAAEU,SACH,aAMLC,cAAA,MAAAD,UACIf,GAAgBI,EACdE,EACCc,UACAC,KAAI,SAAAC,GAAQ,OAAIN,cAAA,MAAI,UAAQ,OAAMD,SAAEO,GAAc,IACnDhB,EAAYe,KAAI,SAAAE,GAAI,OAAIP,cAAA,MAAI,UAAQ,OAAMD,SAAEQ,GAAU,QAKlE,ECnHAC,IAASC,OACPT,cAACrB,EAAG,IACJ+B,SAASC,eAAe,Q","file":"static/js/main.33934836.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst FILTER_ALPHABETICALLY = 'Sort alphabetically';\nconst FILTER_LENGTH = 'Sort by length';\n\nexport const App = () => {\n  const [chosenFilter, setChosenFilter] = useState('');\n  const [reverseBtn, setReverseBtn] = useState(false);\n  let sortedGoods = [...goodsFromServer];\n\n  if (chosenFilter) {\n    switch (chosenFilter) {\n      case FILTER_ALPHABETICALLY:\n        sortedGoods = sortedGoods.sort((good1, good2) => {\n          if (reverseBtn) {\n            return good2.localeCompare(good1);\n          }\n\n          return good1.localeCompare(good2);\n        });\n        break;\n\n      case FILTER_LENGTH:\n        sortedGoods = sortedGoods.sort((good1, good2) => {\n          if (reverseBtn) {\n            if (good2.length !== good1.length) {\n              return good2.length - good1.length;\n            }\n\n            return good2.localeCompare(good1);\n          }\n\n          return good1.length - good2.length;\n        });\n        break;\n\n      default:\n        return 0;\n    }\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            cn('button', 'is-info',\n              { 'is-light': chosenFilter !== FILTER_ALPHABETICALLY })\n          }\n          onClick={() => setChosenFilter(FILTER_ALPHABETICALLY)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn('button', 'is-success',\n              { 'is-light': chosenFilter !== FILTER_LENGTH })\n          }\n          onClick={() => setChosenFilter(FILTER_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn('button', 'is-warning',\n              { 'is-light': !reverseBtn })\n          }\n          onClick={() => setReverseBtn(!reverseBtn)}\n        >\n          Reverse\n        </button>\n\n        {(chosenFilter || reverseBtn)\n          && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setChosenFilter('');\n              setReverseBtn(false);\n            }}\n          >\n            Reset\n          </button>\n          )}\n      </div>\n\n      <ul>\n        {!chosenFilter && reverseBtn\n          ? sortedGoods\n            .reverse()\n            .map(tempGood => <li data-cy=\"Good\">{tempGood}</li>)\n          : sortedGoods.map(good => <li data-cy=\"Good\">{good}</li>)\n        }\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}