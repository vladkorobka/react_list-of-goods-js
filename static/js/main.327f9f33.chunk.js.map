{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","FILTER_ALPHABETICALLY","FILTER_LENGTH","App","useState","chosenFilter","setChosenFilter","reverseBtn","setReverseBtn","sortedGoods","sort","good1","good2","localeCompare","length","className","type","cn","onClick","reverse","map","tempGood","good","ReactDOM","render","document","getElementById"],"mappings":"0OAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAwB,MACxBC,EAAgB,SAETC,EAAM,WACjB,MAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACIC,EAAW,UAAOT,GAEtB,GAAIK,EACF,OAAQA,GACN,KAAKJ,EACHQ,EAAcA,EAAYC,MAAK,SAACC,EAAOC,GACrC,OAAIL,EACKK,EAAMC,cAAcF,GAGtBA,EAAME,cAAcD,MAE7B,MAEF,KAAKV,EACHO,EAAcA,EAAYC,MAAK,SAACC,EAAOC,GACrC,OAAIL,EACEK,EAAME,SAAWH,EAAMG,OAClBF,EAAME,OAASH,EAAMG,OAGvBF,EAAMC,cAAcF,GAGtBA,EAAMG,OAASF,EAAME,UAE9B,MAEF,QACE,OAAO,EAIb,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IAAG,SAAU,UACX,CAAE,WAAYZ,IAAiBJ,IAEnCiB,QAAS,kBAAMZ,EAAgBL,IANjC,iCAWA,wBACEe,KAAK,SACLD,UACEE,IAAG,SAAU,aACX,CAAE,WAAYZ,IAAiBH,IAEnCgB,QAAS,kBAAMZ,EAAgBJ,IANjC,4BAWA,wBACEc,KAAK,SACLD,UACEE,IAAG,SAAU,aACX,CAAE,YAAaV,IAEnBW,QAAS,kBAAMV,GAAeD,IANhC,sBAWEF,GAAgBE,IAEhB,wBACES,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPZ,EAAgB,IAChBE,GAAc,IALlB,sBAaJ,8BACIH,GAAgBE,EACdE,EACCU,UACAC,KAAI,SAAAC,GAAQ,OAAI,oBAAI,UAAQ,OAAZ,SAAoBA,OACrCZ,EAAYW,KAAI,SAAAE,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAAoBA,aC9GxDC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.327f9f33.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst FILTER_ALPHABETICALLY = 'abc';\nconst FILTER_LENGTH = 'length';\n\nexport const App = () => {\n  const [chosenFilter, setChosenFilter] = useState('');\n  const [reverseBtn, setReverseBtn] = useState(false);\n  let sortedGoods = [...goodsFromServer];\n\n  if (chosenFilter) {\n    switch (chosenFilter) {\n      case FILTER_ALPHABETICALLY:\n        sortedGoods = sortedGoods.sort((good1, good2) => {\n          if (reverseBtn) {\n            return good2.localeCompare(good1);\n          }\n\n          return good1.localeCompare(good2);\n        });\n        break;\n\n      case FILTER_LENGTH:\n        sortedGoods = sortedGoods.sort((good1, good2) => {\n          if (reverseBtn) {\n            if (good2.length !== good1.length) {\n              return good2.length - good1.length;\n            }\n\n            return good2.localeCompare(good1);\n          }\n\n          return good1.length - good2.length;\n        });\n        break;\n\n      default:\n        return 0;\n    }\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            cn('button', 'is-info',\n              { 'is-light': chosenFilter !== FILTER_ALPHABETICALLY })\n          }\n          onClick={() => setChosenFilter(FILTER_ALPHABETICALLY)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn('button', 'is-success',\n              { 'is-light': chosenFilter !== FILTER_LENGTH })\n          }\n          onClick={() => setChosenFilter(FILTER_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn('button', 'is-warning',\n              { 'is-light': !reverseBtn })\n          }\n          onClick={() => setReverseBtn(!reverseBtn)}\n        >\n          Reverse\n        </button>\n\n        {(chosenFilter || reverseBtn)\n          && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setChosenFilter('');\n              setReverseBtn(false);\n            }}\n          >\n            Reset\n          </button>\n          )}\n      </div>\n\n      <ul>\n        {!chosenFilter && reverseBtn\n          ? sortedGoods\n            .reverse()\n            .map(tempGood => <li data-cy=\"Good\">{tempGood}</li>)\n          : sortedGoods.map(good => <li data-cy=\"Good\">{good}</li>)\n        }\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}